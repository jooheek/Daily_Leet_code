super : access/call the parent class members(variables and methods)
	->commonly used with method overriding when we call a method with the same name from the parent class


class SuperClass(){
	public void printMethod(){
	
	}
}

class SubClass extends SuperClass{
	@override
	public void printMethod(){
		super.printMethod();->	*without the keyword super it could be recursive call
	}
}



this : call the current class members(variable and methods)
	->required when we have a parameter with the same name as an instance variable(field)
	->usually used with constructors and setters since there is a parameter with the same name
	
both of them cannot be used in static areas